[defaults]
host_key_checking = False
log_path = ~/ansible_logs/ansible.logs

[ssh_connection]
retries = 3

[inventory]
enable_plugins = host_list, script, auto, yaml, ini, toml, aws_ec2

# [py3_hosts:vars]
# ansible_python3_interpreter = /usr/bin/python3

# move this to /etc/ansible/ansible.conf
# use ansible galaxy to install aws plugin
# install boto3 and boto-core
# make sure to add to jenkins dir; /var/lib/jenkins/ the dirs .shh/<key-pair>.pem and .aws/creds and change ownership to jenkins:jenkins
# copy ~/.ssh/known_hosts over to /var/lib/jenkins/.ssh/known_hosts
# add the jenkins user to group docker as udo usermod -aG docker jenkins
# additionally sudo chmod 664 /var/run/docker.sock to prevent being denied access to docker socket

# CONFIGURE AS FOLLOWS FOR AWS_PROFILE TO WORK

# $ export AWS_SDK_LOAD_NONDEFAULT_CONFIG=1 also trY true
# $ export AWS_SDK_LOAD_CONFIG=1 also try true
# $ export AWS_PROFILE=devopsrole
# $ export AWS_DEFAULT_PROFILE=devopsrole

# CONFIGURE THE FOLLOWING FILES AS FOLLOWS ADDITIONALLY TO SOLUTIONS IN https://github.com/ansible-collections/amazon.aws/issues/912

# $ cat ~/.aws/credentials
# [profile]
# role_arn=arn:aws:iam::<user-id>:role/devopsiamrole
# source_profile=devopsrole

# [devopsrole]
# aws_access_key_id=<id>
# aws_secret_access_key=<id>

# $ cat ~/.aws/config
# [default]
# region = us-east-1

# [profile devopsrole]
# role_arn = arn:aws:iam::<id>:role/devopsiamrole
# source_profile = devopsrole

# WRITE THE INVENTORY FILE AS FOLLOWS WITHOUT THE AWS_PROFILE / BOTO_PROFILE

# plugin: aws_ec2
# aws_profile: devopsrole assumes the role in the ~/.aws/ config or credentials
# regions:

#     us-east-1
#     filters:
#     instance-state-name: running
#     Keyed_groups:

#     prefix: tag
#     key: 'tags'
#     compose:
#     ansible_host: public_dns_name

#     note that aws_profile is commented out.
